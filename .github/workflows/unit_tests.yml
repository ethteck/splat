name: unit_tests

on:
  push:
  pull_request:

jobs:
  unit_tests:
    name: unit_tests on ${{ matrix.os.name }}
    runs-on: ${{ matrix.os.runner }}
    strategy:
      fail-fast: false
      matrix:
        os: [
          {
            name: linux,
            runner: ubuntu-latest,
            python_venv: .venv/bin/python3,
          },
          {
            name: macos,
            runner: macos-latest,
            python_venv: .venv/bin/python3,
          },
          {
            name: windows,
            runner: windows-latest,
            python_venv: .venv/Scripts/python3,
          },
        ]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install dependencies
        if: matrix.os.name == 'linux'
        run: sudo apt-get install -y build-essential make binutils-mips-linux-gnu python3 python3-pip python3-venv wget

      - name: Setup Python venv
        run: |
          python3 -m venv .venv

      - name: Install Python dependencies
        run: |
          ${{ matrix.os.python_venv }} -m pip install -U -r requirements.txt
          ${{ matrix.os.python_venv }} -m pip install -e .

      - name: Build `basic_app` on ${{ matrix.os.name }}
        if: matrix.os.name == 'linux'
        # Linux CI checks if any of the test C code has changed without updating the generated binary
        run: |
          make -C test/basic_app clean
          make -C test/basic_app download_kmc
          make -C test/basic_app all
          git diff --exit-code test/basic_app/build/basic_app.bin

      - name: Run the test
        run: |
          ${{ matrix.os.python_venv }} test.py
